#version 450 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(rgba8, binding = 0) uniform image2D screenIn;

layout(std430, binding=3) buffer ASCII {
    uint chars[];
};

uint getChar(vec4 col) {
    float gray = 0.3 * col.r + 0.59 * col.g + 0.11 * col.b;

    uint n =  46;               // .
    if (gray > 0.2) n = 58;     // :
    if (gray > 0.3) n = 42;     // *
    if (gray > 0.4) n = 111;     // o
    if (gray > 0.5) n = 38;     // &
    if (gray > 0.6) n = 56;     // 8
    if (gray > 0.7) n = 64;     // @
    if (gray > 0.8) n = 35;     // #

    return n;
}

void main() {
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy) * 8;
    vec4 color = imageLoad(screenIn, texelCoord);
    uint char = getChar(color);

    uint y = gl_NumWorkGroups.y - gl_GlobalInvocationID.y;

    uint idx = gl_GlobalInvocationID.x + (y * gl_NumWorkGroups.x);
    // 4 bytes per int
//    uint intIndex = idx / 4;
//    uint withinIntIdx = int(mod(idx, 4));

    // 8 bits per byte
//    char = char << (withinIntIdx * 8);
//    chars[intIndex] |= char;
    chars[idx] = char;
}